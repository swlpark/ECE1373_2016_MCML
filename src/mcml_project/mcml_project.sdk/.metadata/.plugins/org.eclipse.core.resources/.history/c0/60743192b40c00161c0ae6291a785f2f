/******************************************************************************
*
* Copyright (C) 2008 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

#ifndef __MEMORY_CONFIG_H_
#define __MEMORY_CONFIG_H_

struct memory_range_s {
    char *name;
    char *ip;
    unsigned base;
    unsigned size;
};

/* generated memory ranges defined in memory_ranges_g.c */
extern struct memory_range_s memory_ranges[];
extern int n_memory_ranges;

enum {Z0_CTRL=0, Z1_CTRL, N_CTRL, MUA_CTRL, MUS_CTRL, G_CTRL, CC0_CTRL, CC1_CTRL, RDRA_ARR, ARZ_CTRL, TTRA_CTRL} bram_indicies;

/* microblaze_0_local_memory_dlmb_bram_if_cntlr memory will not be tested since application resides in the same memory */
{
	"layerspec_z0_ctrl",
	"axi_bram_ctrl",
	0xC0000000,
	4096,
},
{
	"layerspec_z1_ctrl",
	"axi_bram_ctrl",
	0xC2000000,
	4096,
},
{
	"layerspec_n_ctrl",
	"axi_bram_ctrl",
	0xC4000000,
	4096,
},
{
	"layerspec_mua_ctrl",
	"axi_bram_ctrl",
	0xC6000000,
	4096,
},
{
	"layerspec_mus_ctrl",
	"axi_bram_ctrl",
	0xC8000000,
	4096,
},
{
	"layerspec_g_ctrl",
	"axi_bram_ctrl",
	0xCA000000,
	4096,
},
{
	"layerspec_cc0_ctrl",
	"axi_bram_ctrl",
	0xCC000000,
	4096,
},
{
	"layerspec_cc1_ctrl",
	"axi_bram_ctrl",
	0xCE000000,
	4096,
},
{
	"mcml_store_RDRA_CTRL",
	"axi_bram_ctrl",
	0xD0000000,
	65536,
},
{
	"mcml_store_ARZ_CTRL",
	"axi_bram_ctrl",
	0xD2000000,
	65536,
},
{
	"mcml_store_TTRA_CTRL",
	"axi_bram_ctrl",
	0xD4000000,
	65536,
},
#endif
